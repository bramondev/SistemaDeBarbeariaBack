// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemadeBarbeariaBack.Data;

#nullable disable

namespace SistemaDeBarbeariaBack.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241210185012_InicialCreate")]
    partial class InicialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Agendamento", b =>
                {
                    b.Property<int>("AgendamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendamentoId"));

                    b.Property<int>("BarbeiroId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HorarioData")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("AgendamentoId");

                    b.HasIndex("BarbeiroId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Agendamentos");

                    b.HasData(
                        new
                        {
                            AgendamentoId = 1,
                            BarbeiroId = 1,
                            ClienteId = 1,
                            HorarioData = new DateTime(2024, 12, 11, 15, 50, 11, 762, DateTimeKind.Local).AddTicks(9208),
                            ServicoId = 1
                        },
                        new
                        {
                            AgendamentoId = 2,
                            BarbeiroId = 2,
                            ClienteId = 2,
                            HorarioData = new DateTime(2024, 12, 12, 15, 50, 11, 764, DateTimeKind.Local).AddTicks(8173),
                            ServicoId = 2
                        },
                        new
                        {
                            AgendamentoId = 3,
                            BarbeiroId = 3,
                            ClienteId = 3,
                            HorarioData = new DateTime(2024, 12, 13, 15, 50, 11, 764, DateTimeKind.Local).AddTicks(8192),
                            ServicoId = 3
                        },
                        new
                        {
                            AgendamentoId = 4,
                            BarbeiroId = 4,
                            ClienteId = 4,
                            HorarioData = new DateTime(2024, 12, 14, 15, 50, 11, 764, DateTimeKind.Local).AddTicks(8194),
                            ServicoId = 4
                        },
                        new
                        {
                            AgendamentoId = 5,
                            BarbeiroId = 5,
                            ClienteId = 5,
                            HorarioData = new DateTime(2024, 12, 15, 15, 50, 11, 764, DateTimeKind.Local).AddTicks(8195),
                            ServicoId = 5
                        });
                });

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Barbeiro", b =>
                {
                    b.Property<int>("IdBarbeiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBarbeiro"));

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeBarbeiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneBarbeiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBarbeiro");

                    b.ToTable("Barbeiros");

                    b.HasData(
                        new
                        {
                            IdBarbeiro = 1,
                            Especialidade = "Corte",
                            NomeBarbeiro = "Carlos",
                            TelefoneBarbeiro = "123456789"
                        },
                        new
                        {
                            IdBarbeiro = 2,
                            Especialidade = "Barba",
                            NomeBarbeiro = "João",
                            TelefoneBarbeiro = "234567890"
                        },
                        new
                        {
                            IdBarbeiro = 3,
                            Especialidade = "Coloração",
                            NomeBarbeiro = "Pedro",
                            TelefoneBarbeiro = "345678901"
                        },
                        new
                        {
                            IdBarbeiro = 4,
                            Especialidade = "Alisamento",
                            NomeBarbeiro = "Lucas",
                            TelefoneBarbeiro = "456789012"
                        },
                        new
                        {
                            IdBarbeiro = 5,
                            Especialidade = "Corte e Barba",
                            NomeBarbeiro = "Rafael",
                            TelefoneBarbeiro = "567890123"
                        });
                });

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            IdCliente = 1,
                            NomeCliente = "Ana",
                            TelefoneCliente = "987654321"
                        },
                        new
                        {
                            IdCliente = 2,
                            NomeCliente = "Bruno",
                            TelefoneCliente = "876543210"
                        },
                        new
                        {
                            IdCliente = 3,
                            NomeCliente = "Clara",
                            TelefoneCliente = "765432109"
                        },
                        new
                        {
                            IdCliente = 4,
                            NomeCliente = "Diego",
                            TelefoneCliente = "654321098"
                        },
                        new
                        {
                            IdCliente = 5,
                            NomeCliente = "Elisa",
                            TelefoneCliente = "543210987"
                        });
                });

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Servicos", b =>
                {
                    b.Property<int>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServico"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdServico");

                    b.ToTable("Servicos");

                    b.HasData(
                        new
                        {
                            IdServico = 1,
                            Descricao = "Corte Simples",
                            Preco = 20.00m
                        },
                        new
                        {
                            IdServico = 2,
                            Descricao = "Barba",
                            Preco = 15.00m
                        },
                        new
                        {
                            IdServico = 3,
                            Descricao = "Corte e Barba",
                            Preco = 30.00m
                        },
                        new
                        {
                            IdServico = 4,
                            Descricao = "Coloração",
                            Preco = 50.00m
                        },
                        new
                        {
                            IdServico = 5,
                            Descricao = "Alisamento",
                            Preco = 80.00m
                        });
                });

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Agendamento", b =>
                {
                    b.HasOne("SistemaDeBarbeariaBack.Models.Barbeiro", "barbeiro")
                        .WithMany("agendamentosBarbeiro")
                        .HasForeignKey("BarbeiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeBarbeariaBack.Models.Cliente", "cliente")
                        .WithMany("agendamentosClientes")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeBarbeariaBack.Models.Servicos", "servicos")
                        .WithMany("agendamentosServicos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("barbeiro");

                    b.Navigation("cliente");

                    b.Navigation("servicos");
                });

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Barbeiro", b =>
                {
                    b.Navigation("agendamentosBarbeiro");
                });

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Cliente", b =>
                {
                    b.Navigation("agendamentosClientes");
                });

            modelBuilder.Entity("SistemaDeBarbeariaBack.Models.Servicos", b =>
                {
                    b.Navigation("agendamentosServicos");
                });
#pragma warning restore 612, 618
        }
    }
}
